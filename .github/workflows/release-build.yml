name: Release Build

on:
  release:
    types: [created]

jobs:
  version:
    name: Inject Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - name: Set version
        id: set-version
        run: |
          VERSION=$(node tools/update-version.js)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  flatpak:
    name: "Flatpak"
    needs: version
    runs-on: ubuntu-latest
    container:
      image: bilelmoussaoui/flatpak-github-actions:freedesktop-24.08
      options: --privileged
    steps:
      - uses: actions/checkout@v4
      
      - name: Inject version
        run: |
          sed -i "s/version:.*/version: ${{ needs.version.outputs.version }}/" flatpak/com.frigateNVR.ConfigGUI.yml
      
      - name: Install Node.js SDK extension
        run: |
          flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
          flatpak install -y flathub org.freedesktop.Sdk.Extension.node20//24.08
      
      - uses: flatpak/flatpak-github-actions/flatpak-builder@v6
        with:
          bundle: frigate-config-gui.flatpak
          manifest-path: flatpak/com.frigateNVR.ConfigGUI.yml
          cache-key: flatpak-builder-${{ github.sha }}
      - name: Upload Flatpak bundle
        uses: actions/upload-artifact@v4
        with:
          name: flatpak-bundle
          path: frigate-config-gui.flatpak
          retention-days: 7

  electron-linux:
    steps:
      - uses: actions/checkout@v4
      - name: Inject version
        run: sed -i "s/"version":.*/"version": "$(date +%Y-%m-%d).${GITHUB_RUN_NUMBER}",/" package.json
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - run: npm ci
      - run: npm run electron:build
      - uses: actions/upload-artifact@v4
        with:
          name: electron-linux-${{ github.run_number }}
          path: dist/*
          retention-days: 7
    name: "Electron Linux"
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: version

electron-windows:
    name: "Electron Windows"
    runs-on: windows-latest
    permissions:
      contents: write
    needs: version

electron-macos:
    name: "Electron MacOS"
    runs-on: macos-latest
    permissions:
      contents: write
    needs: version

    steps:
      - uses: actions/checkout@v4
      
      - name: Inject version
        run: |
          sed -i "s/\"version\":.*/\"version\": \"${{ needs.version.outputs.version }}\",/" package.json

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build Electron app
        run: npm run electron:build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: electron-${{ matrix.os }}
          path: |
            dist/*.AppImage
            dist/*.snap
            dist/*.deb
            dist/*.rpm
            dist/*.exe
            dist/*.dmg
          retention-days: 7

      - name: Upload to release
        if: github.event.release.published_at != null
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.AppImage
            dist/*.snap
            dist/*.deb
            dist/*.rpm
            dist/*.exe
            dist/*.dmg
          tag_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        permissions:
          contents: write